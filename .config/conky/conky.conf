-- vim:ft=lua:

conky.config = {
  gap_y          = 0,
  gap_x          = 0,
  minimum_height = 1280,
  minimum_width  = 1024,
  alignment      = 'tl',

  update_interval     = 0.5,
  font                = 'monospace-120',
  default_color       = 'ffffff',
  default_shade_color = '777777',
  draw_shades         = true,

  -- window
  own_window_argb_value  = 0,
  own_window_argb_visual = true,
  own_window             = true,
  own_window_type        = 'override',
  double_buffer          = true,
  use_xft                = true,

  -- lua
  -- lua_startup_hook   = "",
  -- lua_load = "",
  -- lua_draw_hook_post = ""
  -- lua_draw_hook_pre  = "",
  -- lua_shutdown_hook  = "",
}

conky.text = [[
${alignc}${keyboard_layout}
${alignc}${time %B %d}
]]

(function (basedir)
--[[
  Check if this config is already running
  and that the path exists
--]]
  local pid, fd, thispid = nil, nil, nil
  local pidfile = basedir .. '/simple@' .. os.getenv('DISPLAY')
  -- make sure base dir exists...
  fd = io.open(basedir)
  if fd ~= nil then
    fd:close()
  else
    fd = io.popen('mkdir -p .. "' .. basedir:gsub('"','\\"') .. '"')
    if fd == nil then os.exit(10) else fd:close() end
    fd = io.open(basedir)
    if fd == nil then os.exit(11) end
  end
  -- get own pid
  fd = io.open('/proc/self/stat', 'r')
  if fd ~= nil then
    thispid = (function (a) return a:gsub(' .*', '') end)(fd:read())
    fd:close()
  end
  -- check if another instance is running
  fd = io.open(pidfile, 'r')
  if fd ~= nil then
    pid = fd:read()
    fd:close()
    if pid ~= nil and pid ~= thispid then
      fd = io.open('/proc/' .. pid)
      if fd ~= nil then
        fd:close()
        os.exit(12)
      end
    end
  end
  -- store pid
  fd = io.open(pidfile, 'w')
  if fd ~= nil then
    fd:write(thispid)
    fd:close()
  end
end)((os.getenv('XDG_CACHE_HOME') or os.getenv('HOME')..'/.cache')..'/conky')
